import uuid

from django.db import models

from common.models import BaseModel


class QuizQuestion(BaseModel):
    """–ú–æ–¥–µ–ª—å –∑–∞–ø–∏—Ç–∞–Ω—å –¥–ª—è –∫–≤—ñ–∑—É"""

    def get_upload_path(self, filename):
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Ç—å –∫ –Ω–µ–º—É

        file_extension = filename.split(".")[-1]
        new_filename = f"{uuid.uuid4().hex}.{file_extension}"
        return f"quiz/images/{self.id}/{new_filename}"

    text = models.CharField(
        verbose_name="–ó–∞–ø–∏—Ç–∞–Ω–Ω—è",
        max_length=300,
        help_text="–ú–∞–∫—Å–∏–º—É–º 300 —Å–∏–º–≤–æ–ª—ñ–≤",
    )
    explanation = models.TextField(
        verbose_name="–ü–æ—è—Å–Ω–µ–Ω–Ω—è",
        blank=True,
        null=True,
        max_length=200,
        help_text="–ü–æ—è—Å–Ω–µ–Ω–Ω—è —â–æ–¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª—ñ–≤",
    )
    image = models.ImageField(
        verbose_name="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è",
        blank=True,
        null=True,
        upload_to=get_upload_path,
    )
    is_active = models.BooleanField(verbose_name="–ê–∫—Ç–∏–≤–Ω–µ", default=True)

    def __str__(self):
        return f"ID: {self.id} - {self.text[:50]}..."

    class Meta:
        verbose_name = "ü§îÔ∏è Quiz-–ó–∞–ø–∏—Ç–∞–Ω–Ω—è"
        verbose_name_plural = "ü§î Quiz-–ó–∞–ø–∏—Ç–∞–Ω–Ω—è"


class QuizAnswer(BaseModel):
    """–ú–æ–¥–µ–ª—å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∫–≤—ñ–∑—É"""

    question = models.ForeignKey(
        to=QuizQuestion,
        on_delete=models.CASCADE,
        related_name="answers",
        verbose_name="–ó–∞–ø–∏—Ç–∞–Ω–Ω—è",
    )
    text = models.CharField(verbose_name="–í—ñ–¥–ø–æ–≤—ñ–¥—å", max_length=50)
    is_correct = models.BooleanField(verbose_name="–í—ñ—Ä–Ω–∞", default=False)

    def __str__(self):
        return f"ID: {self.id} - {self.question.text[:20]}..."

    def save(self, *args, **kwargs):
        if self.is_correct:  # –Ø–∫—â–æ —Ü—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø–æ–∑–Ω–∞—á–µ–Ω–∞ —è–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–∞
            # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ —ñ–Ω—à—ñ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–ª—è —Ü—å–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è
            other_correct_answers = QuizAnswer.objects.filter(
                question=self.question, is_correct=True
            ).exclude(id=self.id)

            # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ó–º is_correct=False
            other_correct_answers.update(is_correct=False)

        super().save(*args, **kwargs)

    class Meta:
        constraints = [
            models.UniqueConstraint(
                fields=("question",),
                condition=models.Q(is_correct=True),
                name="unique_correct_answer",
            )
        ]
        verbose_name = "–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∫–≤—ñ–∑—É"
        verbose_name_plural = "–í—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∫–≤—ñ–∑—É"
