from datetime import datetime

from django.utils import timezone

import robot.tgbot.text.member_template as mt
from robot.tgbot.keyboards.member import cancel_keyboard, contact_keyboard

# ================= –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –ü–û–õ–Ü–í =================
# –ö–æ–∂–Ω–µ –ø–æ–ª–µ –º—ñ—Å—Ç–∏—Ç—å —É—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏
field_configs = [
    {
        "name": "phone_number",  # –ù–∞–∑–≤–∞ –ø–æ–ª—è –≤ –º–æ–¥–µ–ª—ñ ClubUser
        "request_text": mt.msg_phone,  # –¢–µ–∫—Å—Ç –∑–∞–ø–∏—Ç—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        "keyboard": contact_keyboard,  # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
        "validation": lambda msg: (
            msg.contact is not None and msg.contact.user_id == msg.from_user.id
        ),  # –í–∞–ª—ñ–¥–∞—Ü—ñ—è
        "processor": lambda msg: f"+{msg.contact.phone_number.lstrip('+')}",  # –û–±—Ä–æ–±–∫–∞ –∑–Ω–∞—á–µ–Ω–Ω—è
        "error_text": "–•–∏–±–Ω—ñ –¥–∞–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ—é –∑–Ω–∏–∑—É üëá",  # –¢–µ–∫—Å—Ç –ø–æ–º–∏–ª–∫–∏
    },
    {
        "name": "data_of_birth",
        "request_text": mt.msg_dob,
        "keyboard": cancel_keyboard,
        "validation": lambda msg: validate_dob(
            msg.text.strip().replace(",", ".")
        ),
        "processor": lambda msg: datetime.strptime(
            msg.text.strip().replace(",", "."), "%d.%m.%Y"
        ).date(),
        "error_text": "‚ùó –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∞–±–æ –¥–∞—Ç–∞ —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ DD.MM.YYYY",
    },
]


def validate_dob(text: str) -> bool:
    """–í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞—Ç–∏ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è.
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î:
    - –ö–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç—É DD.MM.YYYY
    - –î–∞—Ç–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É
    """
    try:
        dob = datetime.strptime(text, "%d.%m.%Y").date()
        return dob < timezone.now().date()
    except ValueError:
        return False
